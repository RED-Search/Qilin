project_name: "recommendation_dpr"
project_dir: "output_recommendation_dpr"
trainer: dense_retrieval_trainer

# Model Configuration
model:
  model_name_or_path: "../model/bert-base-chinese/"  # Base model
  tokenizer_name_or_path: "../model/bert-base-chinese/"  # Tokenizer
  load_from_new: false  # Whether to load from the latest checkpoint
  tie_model_weights: true  # Whether to share encoder weights
  lora_checkpoint_dir: "bert_checkpoints/"  # LoRA checkpoint save path
  gradient_checkpointing: true

# Dataset Configuration
datasets:
  dataset_name_or_path: "../datasets/qilin/"  # Dataset path
  train_data_processor: "DenseRetrievalTrainingDataProcessor"  # Training data processor
  tokenizer_name_or_path: "../model/bert-base-chinese/"
  batch_size: 96  # Batch size
  eval_batch_size: 1
  max_length: 256  # Maximum sequence length
  negative_samples: 18  # Number of negative samples
  use_title: true  # Whether to use title
  use_content: true  # Whether to use content
  negative_pool: rec_result_details_with_idx
  train_data_key: recommendation_train
  
# Training Configuration
training:
  num_epochs: 300000  # Number of training epochs
  eval_steps: 1000  # Evaluation steps
  save_steps: 1000  # Save steps
  eval_epochs: 1
  save_epochs: 1
  negatives_x_device: true  # Whether to use negatives across devices

# Optimizer Configuration
optimizer: 
  name: Lamb
  kwargs:
    lr: 1e-3
    weight_decay: 0.0
    betas: [0.9, 0.999]
    eps: 1e-08

# Learning Rate Scheduler Configuration
scheduler:
  name: LinearLR
  kwargs:
    total_iters: 10

# Evaluation Configuration
evaluation:
  target_metric: "MRR@10"  # Target evaluation metric
  output_dir: "eval_results"  # Evaluation results output directory
  top_k: 100  # Retrieve top-k results
  qrels_data_path: "../datasets/recommendation.test.qrels.csv"
  # qrels_data_path: "../datasets/dqa.qrels.csv"
  rerank_depth: 1000  # Reranking depth
  results_key: "rec_results"  # Retrieved results to use
  sample_num: 1000  # Number of evaluation samples, evaluate first {sample_num} samples
  test_data_key: recommendation_test
  evaluate_type: rerank  # Evaluation type

# Logger Configuration
logger:
  log_with: "tensorboard"  # Logging tool